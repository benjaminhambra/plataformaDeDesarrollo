// <auto-generated />
using System;
using System.Net.Http;
using System.Collections.Generic;
using Parcial_II.RefitInternalGenerated;

/* ******** Hey You! *********
 *
 * This is a generated file, and gets rewritten every time you build the
 * project. If you want to edit it, you need to edit the mustache template
 * in the Refit package */

#pragma warning disable
namespace Parcial_II.RefitInternalGenerated
{
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [AttributeUsage (AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Delegate)]
    sealed class PreserveAttribute : Attribute
    {

        //
        // Fields
        //
        public bool AllMembers;

        public bool Conditional;
    }
}
#pragma warning restore

#pragma warning disable CS8632 // The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
#pragma warning disable CS8669 // The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
namespace Parcial_II.Data
{
    using global::Refit;
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedIRemoteService : IRemoteService
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedIRemoteService(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<List<Tareas>> IRemoteService.GetTareas()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetTareas", new Type[] {  });
            return (Task<List<Tareas>>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<List<Usuarios>> IRemoteService.GetUsuarios()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetUsuarios", new Type[] {  });
            return (Task<List<Usuarios>>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<List<Recursos>> IRemoteService.GetRecursos()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetRecursos", new Type[] {  });
            return (Task<List<Recursos>>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<List<Detalles>> IRemoteService.GetDetalles()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetDetalles", new Type[] {  });
            return (Task<List<Detalles>>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Usuarios> IRemoteService.GetUsuariosById(int Id)
        {
            var arguments = new object[] { Id };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetUsuariosById", new Type[] { typeof(int) });
            return (Task<Usuarios>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Recursos> IRemoteService.GetRecursosById(int id)
        {
            var arguments = new object[] { id };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetRecursosById", new Type[] { typeof(int) });
            return (Task<Recursos>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Tareas> IRemoteService.GetTareasById(int Id)
        {
            var arguments = new object[] { Id };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetTareasById", new Type[] { typeof(int) });
            return (Task<Tareas>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Detalles> IRemoteService.GetDetallesById(int Id)
        {
            var arguments = new object[] { Id };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetDetallesById", new Type[] { typeof(int) });
            return (Task<Detalles>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Usuarios> IRemoteService.CreateUsuarios(Usuarios usuario)
        {
            var arguments = new object[] { usuario };
            var func = requestBuilder.BuildRestResultFuncForMethod("CreateUsuarios", new Type[] { typeof(Usuarios) });
            return (Task<Usuarios>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Tareas> IRemoteService.CreateTarea(Tareas tarea)
        {
            var arguments = new object[] { tarea };
            var func = requestBuilder.BuildRestResultFuncForMethod("CreateTarea", new Type[] { typeof(Tareas) });
            return (Task<Tareas>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Recursos> IRemoteService.CreateRecurso(Recursos recurso)
        {
            var arguments = new object[] { recurso };
            var func = requestBuilder.BuildRestResultFuncForMethod("CreateRecurso", new Type[] { typeof(Recursos) });
            return (Task<Recursos>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Detalles> IRemoteService.CreateDetalle(Detalles detalle)
        {
            var arguments = new object[] { detalle };
            var func = requestBuilder.BuildRestResultFuncForMethod("CreateDetalle", new Type[] { typeof(Detalles) });
            return (Task<Detalles>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Usuarios> IRemoteService.DeleteUsuario(int id)
        {
            var arguments = new object[] { id };
            var func = requestBuilder.BuildRestResultFuncForMethod("DeleteUsuario", new Type[] { typeof(int) });
            return (Task<Usuarios>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Tareas> IRemoteService.DeleteTarea(int id)
        {
            var arguments = new object[] { id };
            var func = requestBuilder.BuildRestResultFuncForMethod("DeleteTarea", new Type[] { typeof(int) });
            return (Task<Tareas>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Recursos> IRemoteService.DeleteRecurso(int id)
        {
            var arguments = new object[] { id };
            var func = requestBuilder.BuildRestResultFuncForMethod("DeleteRecurso", new Type[] { typeof(int) });
            return (Task<Recursos>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<Detalles> IRemoteService.DeleteDetalle(int id)
        {
            var arguments = new object[] { id };
            var func = requestBuilder.BuildRestResultFuncForMethod("DeleteDetalle", new Type[] { typeof(int) });
            return (Task<Detalles>)func(Client, arguments);
        }
    }
}

#pragma warning restore CS8632 // The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
#pragma warning restore CS8669 // The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
