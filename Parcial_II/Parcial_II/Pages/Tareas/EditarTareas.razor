@page "/tareas/editar/{id:int}"
@using Parcial_II.Data
@inject TareasService TareasService
@inject NavigationManager navigation

<EditForm Model="@Modelo" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label for="lastName" class="col-sm-2 col-form-label">
        Titulo
    </label>
    <div class="col-sm-10">
        <InputText @bind-Value="Modelo.Titulo" />
    </div>
    <label for="lastName" class="col-sm-2 col-form-label">
        Estado
    </label>
    <div class="col-sm-10">
        <InputText @bind-Value="Modelo.Estado" />
    </div>
    <label for="lastName" class="col-sm-2 col-form-label">
        Estimación
    </label>
    <div class="col-sm-10">
        <InputText @bind-Value="Modelo.Estimacion" />
    </div>
    <label for="lastName" class="col-sm-2 col-form-label">
        Vencimiento
    </label>
    <div class="col-sm-10">
        <InputText @bind-Value="Modelo.Vencimiento" />
    </div>

    <div class="form-group row">
        <InputSelect @bind-Value="RecursoId">
            <option value="0">Elija un Recurso</option>
            @foreach (var item in recursos)
            {
                <option value="@item.Id">@item.Nombre</option>
            }
        </InputSelect>
    </div>

    <button type="submit">Guardar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    public Tareas Modelo { get; set; } = new Tareas();

    public string RecursoId { get; set; }

    private List<Recursos> recursos;

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            Modelo = await TareasService.GetById(Id);
            RecursoId = Modelo.RecursoId.ToString();
        }
        else
        {
            Modelo = new Tareas();
        }
        recursos = await TareasService.GetRecursos();
    }

    private async void Guardar()
    {
        Modelo.RecursoId = int.Parse(RecursoId);
        await TareasService.Save(Modelo);
        navigation.NavigateTo("ListadoTareas");

    }
}